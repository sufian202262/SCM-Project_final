@model IEnumerable<SupplyChainManagement.Models.Supplier>
@{
    ViewData["Title"] = "Supplier Management";
}

<div class="d-flex flex-wrap gap-2 justify-content-between align-items-center mb-4">
    <div class="d-flex align-items-center gap-2">
        <h1 class="mb-0"><i class="fas fa-building"></i> Supplier Management</h1>
        <span class="badge bg-primary-subtle text-primary border border-primary">@Model?.Count() total</span>
    </div>
    <div class="d-flex gap-2">
        <div class="input-group">
            <span class="input-group-text"><i class="fas fa-search"></i></span>
            <input id="supplierSearch" type="text" class="form-control" placeholder="Search suppliers (name, email, phone)..." />
        </div>
        <a class="btn btn-primary" asp-controller="Users" asp-action="Create" asp-route-role="Supplier">
            <i class="fas fa-plus"></i> Add New Supplier
        </a>
    </div>
    <div class="w-100"></div>
    <small class="text-muted">Tip: Use the search box to quickly filter suppliers.</small>
    
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (!(Model?.Any() ?? false))
{
    <div class="alert alert-info">
        <i class="fas fa-info-circle"></i> No suppliers found. Click "Add New Supplier" to create one.
    </div>
}
else
{
    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
        <table id="suppliersTable" class="table table-hover align-middle mb-0">
            <thead>
                <tr>
                    <th>Company Name</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
@foreach (var item in Model)
{
                <tr>
                    <td class="fw-semibold">@item.CompanyName</td>
                    <td>@item.Name</td>
                    <td>
                        <a href="mailto:@item.Email" class="text-decoration-none">
                            <i class="fas fa-envelope text-secondary"></i> @item.Email
                        </a>
                    </td>
                    <td>
                        <a href="tel:@item.Phone" class="text-decoration-none">
                            <i class="fas fa-phone text-secondary"></i> @item.Phone
                        </a>
                    </td>
                    <td class="text-end">
                        <div class="btn-group" role="group">
                            <a class="btn btn-sm btn-outline-info" asp-action="Details" asp-route-id="@item.Id">
                                <i class="fas fa-eye"></i> Details
                            </a>
                            <a class="btn btn-sm btn-outline-primary" asp-action="Edit" asp-route-id="@item.Id">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <a class="btn btn-sm btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">
                                <i class="fas fa-trash"></i> Delete
                            </a>
                        </div>
                    </td>
                </tr>
}
            </tbody>
                </table>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        (function () {
            const search = document.getElementById('supplierSearch');
            const table = document.getElementById('suppliersTable');
            if (!search || !table) return;
            const rows = Array.from(table.querySelectorAll('tbody tr'));
            search.addEventListener('input', function () {
                const q = this.value.toLowerCase();
                rows.forEach(r => {
                    const text = r.innerText.toLowerCase();
                    r.style.display = text.includes(q) ? '' : 'none';
                });
            });
        })();
    </script>
}
