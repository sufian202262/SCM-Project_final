@model IEnumerable<SupplyChainManagement.Models.Shipment>
@using SupplyChainManagement.Models.Enums

@{
    ViewData["Title"] = "Shipment Updates";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Shipment Updates</h1>
    <span class="badge bg-info fs-6">@Model.Count() Shipments</span>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (!Model.Any())
{
    <div class="alert alert-info">
        <i class="fas fa-info-circle"></i> No shipments to update yet.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Shipment ID</th>
                    <th>Order ID</th>
                    <th>Status</th>
                    <th>Created</th>
                    <th>Tracking Number</th>
                    <th>Expected Delivery</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var shipment in Model)
                {
                    <tr>
                        <td><strong>#@shipment.Id</strong></td>
                        <td>
                            <a href="@Url.Action("Details", "Orders", new { id = shipment.OrderId })" class="text-decoration-none">
                                Order #@shipment.OrderId
                            </a>
                        </td>
                        <td>
                            <span class="badge @(shipment.Status == ShipmentStatus.Pending ? "bg-warning" : 
                                               shipment.Status == ShipmentStatus.InTransit ? "bg-info" : 
                                               shipment.Status == ShipmentStatus.Delivered ? "bg-success" : 
                                               shipment.Status == ShipmentStatus.Delayed ? "bg-danger" : "bg-secondary")">
                                @shipment.Status
                            </span>
                        </td>
                        <td>@shipment.CreatedAt.ToString("MMM dd, yyyy")</td>
                        <td>
                            @if (!string.IsNullOrEmpty(shipment.TrackingNumber))
                            {
                                <code>@shipment.TrackingNumber</code>
                            }
                            else
                            {
                                <span class="text-muted">Not set</span>
                            }
                        </td>
                        <td>
                            @if (shipment.DeliveredAt.HasValue)
                            {
                                @shipment.DeliveredAt.Value.ToString("MMM dd, yyyy")
                            }
                            else
                            {
                                <span class="text-muted">Not set</span>
                            }
                        </td>
                        <td>
                            <button type="button" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#updateModal@(shipment.Id)">
                                <i class="fas fa-edit"></i> Update
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @foreach (var shipment in Model)
    {
        <!-- Update Modal -->
        <div class="modal fade" id="updateModal@(shipment.Id)" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form asp-action="UpdateShipment" method="post">
                        <input type="hidden" name="id" value="@shipment.Id" />
                        <div class="modal-header">
                            <h5 class="modal-title">Update Shipment #@shipment.Id</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <label for="trackingNumber@(shipment.Id)" class="form-label">Tracking Number</label>
                                <input type="text" class="form-control" id="trackingNumber@(shipment.Id)" name="trackingNumber" 
                                       value="@shipment.TrackingNumber" placeholder="Enter tracking number" />
                            </div>
                            <div class="mb-3">
                                <label for="expectedDelivery@(shipment.Id)" class="form-label">Expected Delivery Date</label>
                                <input type="datetime-local" class="form-control" id="expectedDelivery@(shipment.Id)" name="expectedDelivery" 
                                       value="@(shipment.DeliveredAt?.ToString("yyyy-MM-ddTHH:mm"))" />
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Update Shipment</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    }
}

<div class="mt-4">
    <a asp-action="OrdersReceived" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left"></i> Back to Orders
    </a>
</div>
